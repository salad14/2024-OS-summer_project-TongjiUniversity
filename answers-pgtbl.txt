Q: 在实现 pgaccess() 系统调用时，发现它无法正确检测到某些页面的访问。即使在访问了这些页面之后，返回的位掩码中对应的位仍然为0，表明这些页面未被访问。
answer:这个问题的原因是，在初始实现中，代码没有正确清除 PTE_A 访问位。这导致在后续调用 pgaccess() 时，检测到的访问状态仍然是上一次调用时的状态，没有反映最新的访问情况。我采用的解决方法是通过在访问不同内存区域后调用 pgaccess() 并打印返回的位掩码，确认问题的存在。在 pgaccess() 的实现中，检查到页面被访问后，立即清除 PTE_A 位。这样，在下一次调用 pgaccess() 时，只有在检测周期内新访问的页面才会被标记。通过在每次检测页面访问状态后清除 PTE_A 位，确保了 pgaccess() 系统调用能够正确检测到页面的访问，并在后续调用中反映新的访问状态。

Q：在实现 vmprint() 函数时，打印输出中包含了一些无效的页表项（PTE），这些项对应的物理地址为 0x0，这表明这些页面未被映射或是无效的。

answer：问题的原因是，vmprint() 函数在遍历页表时，没有正确检查页表项是否有效。因此，无效的页表项（如未映射的页面）也被打印出来，导致输出包含了错误的条目。我通过在 vmprint() 函数中添加对 PTE_V 位的检查，确保了打印输出只包含有效的页表项，解决了输出中包含无效页表项的问题。